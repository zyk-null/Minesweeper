package good.friends;

import org.junit.Test;

import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class openTest {
    Minesweeper ms = new Minesweeper();
    @Test
    public void testOpen() throws IllegalAccessException, NoSuchFieldException, NoSuchMethodException, InvocationTargetException {
        Field field_show= ms.getClass().getDeclaredField("show");
        field_show.setAccessible(true);
        char[][] show = (char[][]) field_show.get(ms);
        Field field_count= ms.getClass().getDeclaredField("count");
        field_count.setAccessible(true);
        int[][] count = (int[][]) field_count.get(ms);

        //测试用例：
        int[][] mine_test={
                {0,0,0,0,0,0,0,0,0,0,0},
                {0,0,0,0,0,0,0,1,1,0,0},
                {0,0,0,0,1,0,0,0,0,0,0},
                {0,1,0,0,0,0,0,0,0,0,0},
                {0,0,0,1,0,0,0,1,0,0,0},
                {0,0,0,0,0,0,0,0,0,0,0},
                {0,0,0,0,0,0,0,0,0,0,0},
                {0,1,0,0,0,0,0,0,0,0,0},
                {0,0,0,0,0,0,0,1,0,0,0},
                {0,1,0,0,0,0,0,1,0,0,0},
                {0,0,0,0,0,0,0,0,0,0,0}
        };
        int[][] count_test={
                {0,0,0,0,0,0,0,0,0,0,0},
                {0,0,0,1,1,1,1,1,1,1,0},
                {0,1,1,1,0,1,1,2,2,1,0},
                {0,0,2,2,2,1,1,1,1,0,0},
                {0,1,2,0,1,0,1,0,1,0,0},
                {0,0,1,1,1,0,1,1,1,0,0},
                {0,1,1,0,0,0,0,0,0,0,0},
                {0,0,1,0,0,0,1,1,1,0,0},
                {0,2,2,0,0,0,2,1,2,0,0},
                {0,0,1,0,0,0,2,1,2,0,0},
                {0,0,0,0,0,0,0,0,0,0,0}
        };
////        //////////////////////////////////////
//        Field field_mine= ms.getClass().getDeclaredField("mine");
//        field_mine.setAccessible(true);
//        int[][] mine = (int[][]) field_mine.get(ms);
//        for(int i=0;i<11;i++){
//            for(int j=0;j<11;j++){
//                mine[i][j]=mine_test[i][j];
//            }
//        }
//        Method method_mark=ms.getClass().getDeclaredMethod("countMine");
//        method_mark.setAccessible(true);
//        method_mark.invoke(ms);
//        for(int i=0;i<11;i++){
//            for(int j=0;j<11;j++){
//                System.out.print(count[i][j]+" ");
//            }
//            System.out.println();
//        }
        ///////////////////////////////////////
        char[][] show_test_before=new char[11][11];
        for(int i=0;i<11;i++){
            for(int j=0;j<11;j++){
                show_test_before[i][j]='*';
            }
        }
        char[][] show_test_after={
                {'*','*','*','*','*','*','*','*','*','*','*'},
                {'*','*','*','*','*','*','*','*','*','*','*'},
                {'*','*','*','*','*','*','*','*','2','1','*'},
                {'*','*','*','*','2','1','1','*','1',' ','*'},
                {'*','*','*','*','1',' ','1','*','1',' ','*'},
                {'*','*','1','1','1',' ','1','1','1',' ','*'},
                {'*','*','1',' ',' ',' ',' ',' ',' ',' ','*'},
                {'*','*','1',' ',' ',' ','1','1','1',' ','*'},
                {'*','*','2',' ',' ',' ','2','*','2',' ','*'},
                {'*','*','1',' ',' ',' ','2','*','2',' ','*'},
                {'*','*','*','*','*','*','*','*','*','*','*'}
        };
        for(int i=0;i<11;i++){
            for(int j=0;j<11;j++){
                count[i][j]=count_test[i][j];
                show[i][j]=show_test_before[i][j];
            }
        }
        Method method_open=ms.getClass().getDeclaredMethod("open",int.class,int.class);
        method_open.setAccessible(true);
        method_open.invoke(ms,6,9);
        for(int i=1;i<=9;i++){
            for(int j=1;j<=9;j++){
                assert show[i][j]==show_test_after[i][j];
            }
        }
    }

}
